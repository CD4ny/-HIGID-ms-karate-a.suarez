// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Indicator {
  id                Int                 @id @default(autoincrement())
  code              String
  name              String
  type              String
  actionType        String
  owner             String
  deleted           Boolean             @default(false)
  // Relations
  IndicatorOnKumite IndicatorOnKumite[]
}

model Karateca {
  id                                 Int                                  @id @default(autoincrement())
  name                               String
  lastName                           String
  sex                                String
  weight                             String
  category                           String
  pic                                String?
  owner                              String
  deleted                            Boolean                              @default(false)
  // Relations
  CompetitiveActivityKarateca_Kumite CompetitiveActivityKarateca_Kumite[]
}

model CompetitiveActivity {
  id                                 Int                                  @id @default(autoincrement())
  desc                               String
  type                               String
  startDate                          DateTime?
  endDate                            DateTime?
  owner                              String
  deleted                            Boolean                              @default(false)
  // Relations
  CompetitiveActivityKarateca_Kumite CompetitiveActivityKarateca_Kumite[]
}

model CompetitiveActivityKarateca_Kumite {
  id                  Int                 @id @default(autoincrement())
  owner               String
  deleted             Boolean             @default(false)
  karateca            Karateca            @relation(fields: [karatecaId], references: [id])
  karatecaId          Int
  competitiveActivity CompetitiveActivity @relation(fields: [activityId], references: [id])
  activityId          Int
  Kumite              Kumite[]
}

model Kumite {
  id                                 Int                                @id @default(autoincrement())
  gi                                 String
  evaluation                         String?
  kumiteType                         String?
  distance                           String?
  sequenceType                       String?
  strikeZones                        String?
  partialTimes                       String?
  levelOfPreparation                 String?
  motorSequence                      String?
  kumiteEnding                       String?
  informalWarnings                   String?
  officialWarnings                   String?
  penalties                          String?
  video                              String?
  owner                              String
  deleted                            Boolean                            @default(false)
  // Relations
  IndicatorOnKumite                  IndicatorOnKumite[]
  CompetitiveActivityKarateca_Kumite CompetitiveActivityKarateca_Kumite @relation(fields: [comp_Karat_Id], references: [id])
  comp_Karat_Id                      Int
}

model IndicatorOnKumite {
  id          Int       @id @default(autoincrement())
  value       String?
  owner       String
  deleted     Boolean   @default(false)
  // Relations
  indicator   Indicator @relation(fields: [indicatorId], references: [id])
  indicatorId Int
  kumite      Kumite    @relation(fields: [kumiteId], references: [id])
  kumiteId    Int
}
